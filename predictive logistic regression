import pandas as pd
import numpy as np


np.random.seed(42)

n_rows = 1000
dates = pd.date_range(start='2023-01-01', periods=n_rows)
machine_ids = np.arange(1, n_rows + 1)
operating_hours = np.random.randint(1, 24, size=n_rows)
temperature = np.random.normal(60, 10, size=n_rows)
vibration = np.random.normal(5, 1, size=n_rows)
noise = np.random.normal(70, 5, size=n_rows)
failure = np.random.choice([0, 1], size=n_rows, p=[0.9, 0.1])

data = {
    'Machine_ID': machine_ids,
    'Date': dates,
    'Operating_Hours': operating_hours,
    'Temperature': temperature,
    'Vibration': vibration,
    'Noise': noise,
    'Failure': failure
}

df = pd.DataFrame(data)
df.to_csv('machine_data.csv', index=False)
df = pd.read_csv("/content/machine_data.csv")
import matplotlib.pyplot as plt
import seaborn as sns


lag_columns = ['Temperature', 'Vibration', 'Noise']

for lag_col in lag_columns:
    df[f'{lag_col}_lag1'] = df[lag_col].shift(1)

df.dropna(inplace=True)
corr_matrix = df.corr()
plt.figure(figsize=(10, 8))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', center=0)
plt.title('Correlation Matrix')
plt.show()

correlation_with_failure = corr_matrix['Failure'].drop(['Failure']).sort_values(ascending=False)
print(correlation_with_failure)
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, roc_curve, roc_auc_score


X = df.drop(['Machine_ID', 'Date', 'Failure'], axis=1)
y = df['Failure']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LogisticRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

print(classification_report(y_test, y_pred))

y_prob = model.predict_proba(X_test)[:, 1]
roc_auc = roc_auc_score(y_test, y_prob)

fpr, tpr, _ = roc_curve(y_test, y_prob)
plt.figure(figsize=(8, 6))
plt.plot(fpr, tpr, label=f'ROC Curve (AUC = {roc_auc:.2f})')
plt.plot([0, 1], [0, 1], 'k--')
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('Receiver Operating Characteristic (ROC) Curve')
plt.legend()
plt.show()
